environment:
  YASM_URL: "http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe"
  YASM_SHA256: "d160b1d97266f3f28a71b4420a0ad2cd088a7977c2dd3b25af155652d8d8d91f"
  AOM_LAST_TAG: "v1.0.0"
  AOM_CMAKE_OPTIONS: "-DENABLE_TESTS=0 -DENABLE_DOCS=0 -DCONFIG_LOWBITDEPTH=1"
  matrix:
  - arch: Win64

image: Visual Studio 2017

branches:
  only:
  - master

skip_tags: true
clone_depth: 1

configuration:
- Release

platform:
- x64

matrix:
  fast_finish: true

init:
# Clone last AOM code
- git clone -b master --single-branch https://aomedia.googlesource.com/aom c:\projects\aom_src

# Change appveyor to know last aom commit
- ps: |
     cd c:\projects\aom_src
     $gitData = ConvertFrom-StringData (git log -1 --format=format:"commitId=%H%nmessage=%s%ncommitted=%aD" | out-string)
     if ($gitData['message'] -eq "") { $gitData['message'] = "No commit message available for $($gitData['commitid'])" }
     Update-AppveyorBuild @gitData

# Create aom version
- ps: |
     $count = (& git rev-list "$env:AOM_LAST_TAG.." --count).Trim()
     $commit = (& git log -1 --format=format:"%h").Trim()
     $version = "$env:AOM_LAST_TAG-$count-$commit"
     echo $version
     Update-AppveyorBuild -Version $version
     $version >> ".\VERSION.txt"
     Push-AppveyorArtifact VERSION.txt

# Set Visual Studio 2017 vars
- set arch=
- if "%arch%"=="Win64" ( set arch= Win64)
- echo %arch%
- echo %APPVEYOR_BUILD_WORKER_IMAGE%
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set generator="Visual Studio 15 2017%arch%" )
- echo %generator%
# Install yasm
- mkdir C:\yasm
- appveyor DownloadFile %YASM_URL% -FileName C:\yasm\yasm.exe
- ps: if ((Get-FileHash C:\yasm\yasm.exe -Algorithm SHA256).Hash.ToLower() -ne $env:YASM_SHA256) { Throw "Yasm hash mismatch" }
- set PATH=C:\yasm;%PATH%

# Prepare Build with cmake
before_build:
- cmd: |-
    cd %APPVEYOR_BUILD_FOLDER%
    mkdir cmake_build
    cd cmake_build
    cmake --version
    cmake c:\projects\aom_src %AOM_CMAKE_OPTIONS% -G %generator%

# Build aom with Visual Studio 2017
build:
  project: C:\projects\build-aom\cmake_build\AOM.sln
  verbosity: minimal
  parallel: true

# Push files to artifacts
after_build:
- appveyor AddMessage "Finish build" -Category Information
- cd %APPVEYOR_BUILD_FOLDER%\cmake_build\Release\
- appveyor PushArtifact aomenc.exe
- appveyor PushArtifact aomdec.exe
- appveyor AddMessage "Finish upload" -Category Information
